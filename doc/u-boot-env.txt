Boot storage device setting
===================================

Boot device is selected by setting 'bootcmd' variable.
Possible settings for available boot devices are:
emmc: setenv bootcmd run bootcmd_emmc
sd0:  setenv bootcmd run bootcmd_mmc0
sd3:  setenv bootcmd run bootcmd_mmc1
net:  setenv bootcmd run bootcmd_tftp

This hints can be stored on board if you set variables 'z_bootcmd_help_*'.
See section 'Reminders for bootcmd usage' below.

Salvator-X(S)/H3ULCB/M3ULCB
===================================

setenv bootdelay 3
setenv baudrate 115200
setenv bootargs
setenv ethact ravb
setenv ipaddr 192.168.1.10
setenv serverip 192.168.1.100
setenv ethaddr 2E:09:0A:00:A0:41

N.B. Either do not set MAC address (should be shipped with u-boot environment already) or put any other MAC address
which will not make conflicts on your network. See sticker on your board.


for tftp boot:
===================================

setenv bootcmd run bootcmd_tftp
setenv bootcmd_tftp 'run tftp_xen_load; run tftp_dtb_load; run tftp_kernel_load; run tftp_xenpolicy_load; run tftp_initramfs_load; bootm 0x48080000 0x76000000 0x48000000'
setenv tftp_dtb_load 'tftp 0x48000000 dom0.dtb; fdt addr 0x48000000; fdt resize; fdt mknode / boot_dev; fdt set /boot_dev device nfs'
setenv tftp_initramfs_load tftp 0x76000000 uInitramfs
setenv tftp_kernel_load tftp 0x7a000000 Image
setenv tftp_xen_load tftp 0x48080000 xen-uImage
setenv tftp_xenpolicy_load tftp 0x7c000000 xenpolicy

for SD0 card boot:
===================================

setenv bootcmd run bootcmd_mmc0
setenv bootcmd_mmc0 'run mmc0_xen_load; run mmc0_dtb_load; run mmc0_kernel_load; run mmc0_xenpolicy_load; run mmc0_initramfs_load; bootm 0x48080000 0x76000000 0x48000000'
setenv mmc0_dtb_load 'ext2load mmc 0:1 0x48000000 /boot/dom0.dtb; fdt addr 0x48000000; fdt resize; fdt mknode / boot_dev; fdt set /boot_dev device mmcblk1'
setenv mmc0_initramfs_load ext2load mmc 0:1 0x76000000 /boot/uInitramfs
setenv mmc0_kernel_load ext2load mmc 0:1 0x7a000000 /boot/Image
setenv mmc0_xen_load ext2load mmc 0:1 0x48080000 /boot/xen-uImage
setenv mmc0_xenpolicy_load ext2load mmc 0:1 0x7c000000 /boot/xenpolicy

for SD3 card boot (Salvator-X(S) only):
===================================

setenv bootcmd run bootcmd_mmc1
setenv bootcmd_mmc1 'run mmc1_xen_load; run mmc1_dtb_load; run mmc1_kernel_load; run mmc1_xenpolicy_load; run mmc1_initramfs_load; bootm 0x48080000 0x76000000 0x48000000'
setenv mmc1_dtb_load 'ext2load mmc 2:1 0x48000000 /boot/dom0.dtb; fdt addr 0x48000000; fdt resize; fdt mknode / boot_dev; fdt set /boot_dev device mmcblk2'
setenv mmc1_initramfs_load ext2load mmc 2:1 0x76000000 /boot/uInitramfs
setenv mmc1_kernel_load ext2load mmc 2:1 0x7a000000 /boot/Image
setenv mmc1_xen_load ext2load mmc 2:1 0x48080000 /boot/xen-uImage
setenv mmc1_xenpolicy_load ext2load mmc 2:1 0x7c000000 /boot/xenpolicy

for eMMC boot:
===================================

setenv bootcmd run bootcmd_emmc
setenv bootcmd_emmc 'run emmc_xen_load; run emmc_dtb_load; run emmc_kernel_load; run emmc_xenpolicy_load; run emmc_initramfs_load; bootm 0x48080000 0x76000000 0x48000000'
setenv emmc_dtb_load 'ext2load mmc 1:1 0x48000000 /boot/dom0.dtb; fdt addr 0x48000000; fdt resize; fdt mknode / boot_dev; fdt set /boot_dev device mmcblk0'
setenv emmc_initramfs_load ext2load mmc 1:1 0x76000000 /boot/uInitramfs
setenv emmc_kernel_load ext2load mmc 1:1 0x7a000000 /boot/Image
setenv emmc_xen_load ext2load mmc 1:1 0x48080000 /boot/xen-uImage
setenv emmc_xenpolicy_load ext2load mmc 1:1 0x7c000000 /boot/xenpolicy

Reminders for bootcmd usage
===================================

These variables have no practical use, but are reminders supposed to make easier usage of bootcmd.
Prefix 'z_' is added intentionaly, so these lines will be easy to identify as last in list after 'printenv'.

setenv z_bootcmd_help_1 'emmc: setenv bootcmd run bootcmd_emmc'
setenv z_bootcmd_help_2 'sd0:  setenv bootcmd run bootcmd_mmc0'
setenv z_bootcmd_help_3 'sd3:  setenv bootcmd run bootcmd_mmc1'
setenv z_bootcmd_help_4 'net:  setenv bootcmd run bootcmd_tftp'

Bootloaders from eMMC:
===================================

In case of boot SoC from the eMMC boot partition 1 (50MHz x8 bus width mode) instead of Serial Flash,
we have an ability to flash bootloader image(s) right here in U-Boot (images must be in raw binary format).
Partitions and offsets the images need to be flashed to were retrieved here:
https://github.com/renesas-rcar/flash_writer/blob/rcar_gen3/docs/application-note.md#348-write-to-the-s-record-format-images-to-the-emmc

Pay attention that tee.bin from the daily build is provided in two forms: with a prepended header and raw binary.
In the command below, we use raw form which name starts with 'tee_raw-*'.
File without '_raw' in the name can not be used for flashing as described below.
In case your build does not contain 'raw' tee binary, you can remove the header manualy.
The header can be recognized by the presence of 'OPTE' in the first four characters of the file.
In order to remove it:
dd bs=28 skip=1 if=<your_tee_with_header.bin> of=tee.bin

setenv flash_bl2 'tftp 0x48000000 bl2.bin; mmc dev 1 1; mmc write 0x48000000 0x1E 0x162;'
setenv flash_bl31 'tftp 0x48000000 bl31.bin; mmc dev 1 1; mmc write 0x48000000 0x200 0xE00;'
setenv flash_bootparam_sa0 'tftp 0x48000000 bootparam_sa0.bin; mmc dev 1 1; mmc write 0x48000000 0x0 0x1E;'
setenv flash_cert_header_sa6 'tftp 0x48000000 cert_header_sa6_emmc.bin; mmc dev 1 1; mmc write 0x48000000 0x180 0x80;'
setenv flash_tee 'tftp 0x48000000 tee.bin; mmc dev 1 1; mmc write 0x48000000 0x1000 0x400;'
setenv flash_u_boot 'tftp 0x48000000 u-boot.bin; mmc dev 1 2; mmc write 0x48000000 0x0 0x800;'
setenv flash_z_loaders 'run flash_bootparam_sa0; run flash_bl2; run flash_cert_header_sa6; run flash_bl31; run flash_tee; run flash_u_boot;'

saveenv

Load uEnv.txt from eMMC:
====================================

Updating Dom0 and u-boot using A/B slots approach requires env to be read from
mmc.
Separate environment partition is expected to have file /boot/uEnv.txt with the
following format:

bootarg=test_boot_arg
...

If no uEnv.txt was found, it should be created with the default configuration.

To read uEnv.txt files on boot, the following configuration should be applied:

setenv loadaddr 0x58000000
setenv bootcmd_mmc0 'run mmc0_xen_load; run mmc0_dtb_load; run mmc0_kernel_load; run mmc0_xenpolicy_load; run mmc0_initramfs_load; bootm 0x48080000 0x74000000 0x48000000'

setenv mmc0_dtb_load 'ext2load mmc 0:${aos_boot_slot} 0x48000000 /boot/dom0.dtb; fdt addr 0x48000000; fdt resize; fdt mknode / boot_dev; fdt set /boot_dev device mmcblk1'
setenv mmc0_initramfs_load 'ext2load mmc 0:${aos_boot_slot} 0x74000000 /boot/uInitramfs'
setenv mmc0_kernel_load 'ext2load mmc 0:${aos_boot_slot} 0x7a000000 /boot/Image'
setenv mmc0_xen_load 'ext2load mmc 0:${aos_boot_slot} 0x48080000 /boot/xen-uImage'
setenv mmc0_xenpolicy_load 'ext2load mmc 0:${aos_boot_slot} 0x7c000000 /boot/xenpolicy'
setenv aos_slot1 1
setenv aos_slot2 2

setenv aos_default_vars 'setenv aos_boot_main 0; setenv aos_boot1_ok 1; setenv aos_boot2_ok 1; setenv aos_boot_part 0'
setenv aos_save_vars 'env export -t ${loadaddr} aos_boot_main aos_boot_part aos_boot1_ok aos_boot2_ok; fatwrite mmc 0:3 ${loadaddr} uEnv.txt ${filesize}'
setenv aos_read_vars 'if load mmc 0:3 ${loadaddr} uEnv.txt; then env import -t ${loadaddr} ${filesize}; else run aos_default_vars; run aos_save_vars; fi'

setenv aos_boot1 'if test ${aos_boot1_ok} -eq 1; then setenv aos_boot1_ok 0; setenv aos_boot2_ok 1; setenv aos_boot_part 0; setenv aos_boot_slot ${aos_slot1}; run aos_save_vars; run bootcmd_mmc0; fi'
setenv aos_boot2 'if test ${aos_boot2_ok} -eq 1; then setenv aos_boot2_ok 0; setenv aos_boot1_ok 1; setenv aos_boot_part 1; setenv aos_boot_slot ${aos_slot2}; run aos_save_vars; run bootcmd_mmc0; fi'


setenv aos_bootcmd 'run aos_read_vars; if test ${aos_boot_main} -eq 0; then run aos_boot1; run aos_boot2; else run aos_boot2; run aos_boot1; fi'
setenv bootcmd 'run aos_bootcmd'
