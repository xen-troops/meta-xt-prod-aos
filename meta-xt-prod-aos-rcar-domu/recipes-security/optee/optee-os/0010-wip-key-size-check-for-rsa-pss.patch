From 5a4076ee311b0de1230b0dfebc833517f3406144 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Vesa=20J=C3=A4=C3=A4skel=C3=A4inen?=
 <vesa.jaaskelainen@vaisala.com>
Date: Sun, 9 May 2021 10:49:24 +0300
Subject: [PATCH 10/10] wip: key size check for rsa pss
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Vesa Jääskeläinen <vesa.jaaskelainen@vaisala.com>
---
 ta/pkcs11/src/processing.h       |  1 +
 ta/pkcs11/src/processing_asymm.c | 13 +++++++++++--
 ta/pkcs11/src/processing_rsa.c   | 11 +++++++++++
 3 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/ta/pkcs11/src/processing.h b/ta/pkcs11/src/processing.h
index 83d890a4..1c8ff828 100644
--- a/ta/pkcs11/src/processing.h
+++ b/ta/pkcs11/src/processing.h
@@ -158,5 +158,6 @@ enum pkcs11_rc generate_rsa_keys(struct pkcs11_attribute_head *proc_params,
 				 struct obj_attrs **priv_head);
 
 size_t rsa_get_input_max_byte_size(TEE_OperationHandle op);
+size_t rsa_get_object_modulus_byte_size(struct pkcs11_object *obj);
 
 #endif /*PKCS11_TA_PROCESSING_H*/
diff --git a/ta/pkcs11/src/processing_asymm.c b/ta/pkcs11/src/processing_asymm.c
index da827fd5..c7172fe5 100644
--- a/ta/pkcs11/src/processing_asymm.c
+++ b/ta/pkcs11/src/processing_asymm.c
@@ -355,9 +355,12 @@ error:
 
 static enum pkcs11_rc
 init_tee_operation(struct pkcs11_session *session,
-		   struct pkcs11_attribute_head *proc_params)
+		   struct pkcs11_attribute_head *proc_params,
+		   struct pkcs11_object *obj)
 {
 	enum pkcs11_rc rc = PKCS11_CKR_OK;
+	size_t modulus_size = 0;
+	uint32_t salt_size = 0;
 
 	switch (proc_params->id) {
 	case PKCS11_CKM_RSA_PKCS_PSS:
@@ -368,6 +371,12 @@ init_tee_operation(struct pkcs11_session *session,
 	case PKCS11_CKM_SHA224_RSA_PKCS_PSS:
 		rc = pkcs2tee_proc_params_rsa_pss(session->processing,
 						  proc_params);
+		if (rc)
+			return rc;
+
+		modulus_size = rsa_get_object_modulus_byte_size(obj);
+		salt_size = *(uint32_t *)session->processing->extra_ctx;
+		//PKCS11_CKR_KEY_SIZE_RANGE;
 		break;
 	default:
 		break;
@@ -393,7 +402,7 @@ enum pkcs11_rc init_asymm_operation(struct pkcs11_session *session,
 	if (rc)
 		return rc;
 
-	return init_tee_operation(session, proc_params);
+	return init_tee_operation(session, proc_params, obj);
 }
 
 /*
diff --git a/ta/pkcs11/src/processing_rsa.c b/ta/pkcs11/src/processing_rsa.c
index 1cd86cd7..60731db3 100644
--- a/ta/pkcs11/src/processing_rsa.c
+++ b/ta/pkcs11/src/processing_rsa.c
@@ -495,3 +495,14 @@ size_t rsa_get_input_max_byte_size(TEE_OperationHandle op)
 
 	return info.maxKeySize / 8;
 }
+
+size_t rsa_get_object_modulus_byte_size(struct pkcs11_object *obj)
+{
+	uint32_t modulus_size = 0;
+	struct obj_attrs *attrs = obj->attributes;
+
+	if (get_attribute_ptr(attrs, PKCS11_CKA_MODULUS, NULL, &modulus_size))
+		return 0;
+
+	return modulus_size;
+}
-- 
2.25.1

